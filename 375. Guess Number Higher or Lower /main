import pdb

class Solution(object):
    def getMoneyAmount(self,n):
        self.foo={}
        #self.count=0    record how many times fun is called
        for i in range(n):
            for j in range(1,n+1):
                if j+i<=n:
                    if i==0: self.foo[(j,j)]=0
                    elif i==1: self.foo[(j,j+i)]=j
                    else: self.foo[(j,j+i)]=min(k+max(self.foo[(j,k-1)],
                                                      self.foo[(k+1,j+i)]) for k in range(j+1,j+i))

        return self.foo[(1,n)]




#recursion
"""
class Solution(object):
    def getMoneyAmount(self,n):
        self.count=0
        self.fun(1,n)
        print self.count

    def fun(self,a,b):
        self.count+=1
        if a>=b: return 0

        #for i in range(a,b):
        #    return i+max(fun(a,i-1),fun(i+1,b))

        return min(i+max(self.fun(a,i-1),self.fun(i+1,b)) for i in range(a,b))
"""